name: Deploy WireGuard

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install WireGuard
      run: sudo apt-get update && sudo apt-get install -y wireguard

    - name: Generate Server Keys
      id: generate-keys
      run: |
        wg genkey | tee server_private.key | wg pubkey > server_public.key
        echo "::set-output name=server_private_key::$(cat server_private.key)"
        echo "::set-output name=server_public_key::$(cat server_public.key)"

    - name: Configure WireGuard
      run: |
        echo "[Interface]
        PrivateKey = ${{ steps.generate-keys.outputs.server_private_key }}
        Address = 10.0.0.1/24
        ListenPort = 51820

        [Peer]
        PublicKey = <client_public_key>
        AllowedIPs = 10.0.0.2/32
        " | sudo tee /etc/wireguard/wg0.conf

    - name: Enable IP forwarding
      run: sudo sysctl -w net.ipv4.ip_forward=1

    - name: Configure iptables
      run: |
        sudo iptables -A FORWARD -i wg0 -j ACCEPT
        sudo iptables -A FORWARD -o wg0 -j ACCEPT
        sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
        sudo apt-get install -y iptables-persistent
        sudo netfilter-persistent save

    - name: Start WireGuard
      run: sudo wg-quick up wg0

    - name: Save client configuration
      run: |
        CLIENT_PRIVATE_KEY=$(wg genkey)
        CLIENT_PUBLIC_KEY=$(echo $CLIENT_PRIVATE_KEY | wg pubkey)
        SERVER_PUBLIC_KEY=${{ steps.generate-keys.outputs.server_public_key }}
        echo "[Interface]
        PrivateKey = $CLIENT_PRIVATE_KEY
        Address = 10.0.0.2/24
        DNS = 1.1.1.1

        [Peer]
        PublicKey = $SERVER_PUBLIC_KEY
        Endpoint = <server_ip>:51820
        AllowedIPs = 0.0.0.0/0
        " > client.conf
        cat client.conf

    - name: Upload client configuration
      uses: actions/upload-artifact@v2
      with:
        name: client-config
        path: client.conf
